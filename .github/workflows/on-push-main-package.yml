name: New Package Version

on:
  push:
    branches:
      [
        auth-provider-efcore,
        auth-provider-mongo,
        identity-provider-efcore,
        identity-provider-mongo,
        identity-provider-firebase,
        business-data-access
      ]

jobs:
  get_version:
    name: Get PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Extract Version
        id: extract_version
        run: |
          echo "$github.event" | jq '.'

  pack_publish:
    name: Pack and Publish
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine Package Name
        run: |
          if [ "${{ github.head_ref }}"  == "auth-provider-efcore" ]; then
            PACKAGE_NAME="CQ.AuthProvider.DataAccess.EfCore"
          elif [ "${{ github.head_ref }}" == "auth-provider-mongo" ]; then
            PACKAGE_NAME="CQ.AuthProvider.DataAccess.Mongo"
          elif [ "${{ github.head_ref }}" == "identity-provider-efcore" ]; then
            PACKAGE_NAME="CQ.IdentityProvider.EfCore"
          elif [ "${{ github.head_ref }}" == "identity-provider-mongo" ]; then
            PACKAGE_NAME="CQ.IdentityProvider.Mongo"
          elif [ "${{ github.head_ref }}" == "identity-provider-firebase" ]; then
            PACKAGE_NAME="CQ.IdentityProvider.Firebase"
          elif [ "${{ github.head_ref }}" == "business-data-access" ]; then
            PACKAGE_NAME="CQ.AuthProvider.BusinessLogic.Abstractions"
          else
            echo "Unknown branch. Exiting."
            exit 1
          fi
          echo "Package Name: $PACKAGE_NAME"

          echo "package_name=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: dotnet restore $package_name

      - name: Build
        run: dotnet build $package_name --configuration Release /p:Version=${{ github.event.head_commit }}

      - name: Pack
        run: dotnet pack $package_name --configuration Release /p:Version=${{ github.event.head_commit }} --no-build --output .

      - name: Show files
        run: ls -la

#      - name: Publish
#        run: dotnet nuget push $package_name.${{ github.event.head_commit }}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
#        env:
#          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}